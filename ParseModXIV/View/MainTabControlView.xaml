<!--Created by Ryan Wilson.
Copyright (c) 2010-2012, Ryan Wilson. All rights reserved.

You may not copy, modify, redistribute or otherwise do anything else to the software; other than use it; without the express written of Ryan Wilson.-->
    
    <UserControl x:Class="ParseModXIV.View.MainTabControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ParseModXIV.ViewModel"
             xmlns:views="clr-namespace:ParseModXIV.View"
             xmlns:me="clr-namespace:ParseModXIV"
             xmlns:my="clr-namespace:ParseModXIV.Model"
             xmlns:Monitors="clr-namespace:ParseModXIV.Monitors"
             xmlns:ParseModXIV="clr-namespace:ParseModXIV"
             xmlns:UserControls="clr-namespace:ParseModXIV.UserControls"
             mc:Ignorable="d">
    
    <UserControl.Resources>
        <local:MainTabControlViewModel x:Key="MainTabControlViewModelModelDataSource" />
        <Style TargetType="TabItem" x:Key="TabItemCollapsed">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <my:AsyncNameToAvatarConverter x:Key="AsyncNameToAvatarConverter" />
        <DataTemplate x:Key="avatarTemplate">
            <StackPanel Orientation="Horizontal">
                <Image Width="40" Height="40">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource AsyncNameToAvatarConverter}">
                            <MultiBinding.Bindings>
                                <Binding RelativeSource="{RelativeSource Self}" />
                                <Binding Path="Name" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Image.Source>
                    <Image.ToolTip>
                        <ToolTip Content="{Binding Path=Name, StringFormat='Name: {0}'}" />
                    </Image.ToolTip>
                </Image>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="ExpanderHeaderFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle SnapsToDevicePixels="true"
                                       Margin="0"
                                       Stroke="Black"
                                       StrokeDashArray="1 2"
                                       StrokeThickness="1"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse
                                    HorizontalAlignment="Center"
                                    x:Name="circle"
                                    VerticalAlignment="Center"
                                    Width="19"
                                    Height="19"
                                    Stroke="DarkGray"/>
                                <Ellipse
                                    Visibility="Hidden"
                                    HorizontalAlignment="Center"
                                    x:Name="shadow"
                                    VerticalAlignment="Center"
                                    Width="17"
                                    Height="17" />
                                <Path
                                    SnapsToDevicePixels="false"
                                    HorizontalAlignment="Center"
                                    x:Name="arrow"
                                    VerticalAlignment="Center"
                                    Stroke="#666"
                                    StrokeThickness="2"
                                    Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                                <ContentPresenter
                                    SnapsToDevicePixels="True"
                                    HorizontalAlignment="Left"
                                    Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    Grid.Column="1"
                                    RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter
                                    Property="Data"
                                    TargetName="arrow"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="-90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        HorizontalAlignment="Center"
                                        x:Name="circle"
                                        VerticalAlignment="Center"
                                        Width="19"
                                        Height="19"
                                        Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                        Stroke="DarkGray"/>
                                    <Ellipse
                                        Visibility="Hidden"
                                        HorizontalAlignment="Center"
                                        x:Name="shadow"
                                        VerticalAlignment="Center"
                                        Width="17"
                                        Height="17"
                                        Fill="{DynamicResource ExpanderShadowFill}"/>
                                    <Path
                                        SnapsToDevicePixels="false"
                                        HorizontalAlignment="Center" 
                                        x:Name="arrow"
                                        VerticalAlignment="Center"
                                        Stroke="#666"
                                        StrokeThickness="2"
                                        Data="M 1,1.5  L 4.5,5  L 8,1.5"/>
                                </Grid>
                                <ContentPresenter
                                    SnapsToDevicePixels="True" 
                                    HorizontalAlignment="Center"
                                    Margin="0,4,0,0" 
                                    VerticalAlignment="Top" 
                                    Grid.Row="1"
                                    RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter
                                    Property="Data"
                                    TargetName="arrow"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="19"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="180"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse
                                        HorizontalAlignment="Center"
                                        x:Name="circle" 
                                        VerticalAlignment="Center"
                                        Width="19"
                                        Height="19"
                                        Fill="{DynamicResource ButtonNormalBackgroundFill}"
                                        Stroke="DarkGray"/>
                                    <Ellipse
                                        Visibility="Hidden" 
                                        HorizontalAlignment="Center" 
                                        x:Name="shadow"
                                        VerticalAlignment="Center"
                                        Width="17" 
                                        Height="17"
                                        Fill="{DynamicResource ExpanderShadowFill}"/>
                                    <Path 
                                        SnapsToDevicePixels="false" 
                                        HorizontalAlignment="Center" 
                                        x:Name="arrow" 
                                        VerticalAlignment="Center"
                                        Stroke="#666" 
                                        StrokeThickness="2" 
                                        Data="M 1,1.5  L 4.5,5  L 8,1.5"/>
                                </Grid>
                                <ContentPresenter 
                                    SnapsToDevicePixels="True"
                                    HorizontalAlignment="Left" 
                                    Margin="4,0,0,0" 
                                    VerticalAlignment="Center"
                                    Grid.Column="1" 
                                    RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter
                                    Property="Data" 
                                    TargetName="arrow"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid SnapsToDevicePixels="False" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.LayoutTransform>
                                        <TransformGroup>
                                            <TransformGroup.Children>
                                                <TransformCollection>
                                                    <RotateTransform Angle="90"/>
                                                </TransformCollection>
                                            </TransformGroup.Children>
                                        </TransformGroup>
                                    </Grid.LayoutTransform>
                                    <Ellipse 
                                        HorizontalAlignment="Center"
                                        x:Name="circle" 
                                        VerticalAlignment="Center"
                                        Width="19" 
                                        Height="19"
                                        Fill="{DynamicResource ButtonNormalBackgroundFill}" 
                                        Stroke="DarkGray"/>
                                    <Ellipse
                                        Visibility="Hidden"
                                        HorizontalAlignment="Center" 
                                        x:Name="shadow" 
                                        VerticalAlignment="Center"
                                        Width="17"
                                        Height="17" 
                                        Fill="{DynamicResource ExpanderShadowFill}"/>
                                    <Path 
                                        SnapsToDevicePixels="false" 
                                        HorizontalAlignment="Center" 
                                        x:Name="arrow" 
                                        VerticalAlignment="Center"
                                        Stroke="#666" 
                                        StrokeThickness="2" 
                                        Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
                                </Grid>
                                <ContentPresenter
                                    SnapsToDevicePixels="True" 
                                    HorizontalAlignment="Center"
                                    Margin="0,4,0,0"
                                    VerticalAlignment="Top"
                                    Grid.Row="1" 
                                    RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter 
                                    Property="Data"
                                    TargetName="arrow"
                                    Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Stroke" TargetName="circle" Value="#666"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="#222"/>
                                <Setter Property="Visibility" TargetName="shadow" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
            <Setter 
                Property="Foreground" 
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames
                                    BeginTime="00:00:00" 
                                    Duration="00:00:0.25"
                                    Storyboard.TargetName="ExpandSite" 
                                    Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.25" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames
                                    BeginTime="00:00:00" 
                                    Duration="00:00:00.25" 
                                    Storyboard.TargetName="ExpandSite" 
                                    Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:0.25" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <DockPanel>
                                <ToggleButton FontFamily="{TemplateBinding FontFamily}" 
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding FontStretch}" 
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}" 
                                              Foreground="{TemplateBinding Foreground}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Padding="{TemplateBinding Padding}" 
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                                              Margin="1" 
                                              MinHeight="0" 
                                              MinWidth="0" 
                                              x:Name="HeaderSite" 
                                              Style="{StaticResource ExpanderDownHeaderStyle}"
                                              Content="{TemplateBinding Header}" 
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>
                                <ContentPresenter
                                    Focusable="false" 
                                    Visibility="Visible" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="{TemplateBinding Padding}" 
                                    x:Name="ExpandSite" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    DockPanel.Dock="Bottom">
                                    <ContentPresenter.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="0"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter
                                    Property="DockPanel.Dock" 
                                    TargetName="ExpandSite" 
                                    Value="Right"/>
                                <Setter 
                                    Property="DockPanel.Dock" 
                                    TargetName="HeaderSite" 
                                    Value="Left"/>
                                <Setter 
                                    Property="Style" 
                                    TargetName="HeaderSite"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                                <Setter 
                                    Property="DockPanel.Dock" 
                                    TargetName="HeaderSite" 
                                    Value="Bottom"/>
                                <Setter
                                    Property="Style" 
                                    TargetName="HeaderSite" 
                                    Value="{StaticResource ExpanderUpHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter 
                                    Property="DockPanel.Dock" 
                                    TargetName="ExpandSite" 
                                    Value="Left"/>
                                <Setter
                                    Property="DockPanel.Dock" 
                                    TargetName="HeaderSite" 
                                    Value="Right"/>
                                <Setter
                                    Property="Style"
                                    TargetName="HeaderSite"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter 
                                    Property="Foreground" 
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}">
        <TabControl Name="gui_TabControl" Margin="5" VirtualizingStackPanel.IsVirtualizing="True">
            <TabControl.Effect>
                <DropShadowEffect ShadowDepth="0" Direction="0" BlurRadius="3" Opacity=".7"/>
            </TabControl.Effect>
            <TabItem Header="Basic">
                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource ParseMod}, Path=Timeline.PartyStats, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <UserControls:PlayerInfoBox DataContext="{Binding}" MaxWidth="300" MaxHeight="100" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>
            <TabItem x:Name="MobAbility_TabItem" Header="Mob Ability (Chat)"
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_MobAbilityVisibility, Mode=TwoWay}">
                <FlowDocumentReader x:Name="MobAbility_FDR" ViewingMode="Scroll" BorderThickness="1" BorderBrush="#FF939393" IsTwoPageViewEnabled="False">
                    <FlowDocument Name="MobAbility_FLOW" PagePadding="5" TextAlignment="Left" Background="Black" Foreground="White" ColumnWidth="99999">
                        <FlowDocument.Resources>
                            <Style TargetType="{x:Type Paragraph}">
                                <Setter Property="Margin" Value="0.5"/>
                            </Style>
                        </FlowDocument.Resources>
                    </FlowDocument>
                </FlowDocumentReader>
            </TabItem>
            <TabItem Header="Party Stats"
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_PartyStatsVisibility, Mode=TwoWay}">
                <ScrollViewer>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Expander Margin="10,0,0,0" Header="Click a character and expand/view this for a breakdown of hostile actions by them." DataContext="{Binding SelectedItem, ElementName=HostileList, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{DynamicResource ExpanderStyle1}">
                                <DockPanel LastChildFill="True">
                                    <DockPanel DockPanel.Dock="Top">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="gui_CAbilityName" Text="{Binding Path=Name}" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold" Margin="2"/>
                                            <Button Width="100" Name="gui_ToggleHostileList" Margin="2" Content="Increase Size"
                                                DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}"
                                                Command="{Binding Path=ToggleHostileExpandedCommand}" />
                                        </StackPanel>
                                    </DockPanel>
                                    <DockPanel>
                                        <ListView Name="gui_DetailHostile" Grid.Row="1" ItemsSource="{Binding Abilities}" MinHeight="150" Height="150"  GridViewColumnHeader.Click="SortHandler">
                                            <ListView.View>
                                                <GridView AllowsColumnReorder="False">
                                                    <GridView.ColumnHeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                                        </DataTemplate>
                                                    </GridView.ColumnHeaderTemplate>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Reg}" Header="Reg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding % of Reg, StringFormat=\{0:P2\}}" Header="% of Reg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Hit}" Header="Hit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Miss}" Header="Miss"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Resist}" Header="Resist"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=Resist %, StringFormat=\{0:P2\}}" Header="Resist %"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Acc, StringFormat=\{0:P2\}}" Header="Acc"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Low}" Header="Low"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding High}" Header="High"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Crit}" Header="Crit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding % of Crit, StringFormat=\{0:P2\}}" Header="% of Crit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Hit}" Header="C Hit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Low}" Header="C Low"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C High}" Header="C High"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Avg, StringFormat=\{0:F2\}}" Header="C Avg"  />
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </DockPanel>
                                </DockPanel>
                            </Expander>
                        </DockPanel>

                        <Grid>
                            <ListView ItemsSource="{Binding}" DataContext="{Binding NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource ParseMod}, Path=Timeline.PartyStats}" x:Name="HostileList" ScrollViewer.CanContentScroll="False" GridViewColumnHeader.Click="SortHandler">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                            </DataTemplate>
                                        </GridView.ColumnHeaderTemplate>
                                        <!--<GridViewColumn Header="Avatar" CellTemplate="{StaticResource avatarTemplate}" />-->
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Name}" Header="Name" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Total}" Header="Total" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DPS, StringFormat=\{0:F2\}}" Header="DPS"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Reg}" Header="Reg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=% of Dmg, StringFormat=\{0:P2\}}" Header="% of Dmg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Low}" Header="Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=High}" Header="High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Hit}" Header="Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Miss}" Header="Miss"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Acc, StringFormat=\{0:P2\}}" Header="Acc"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Crit}" Header="Crit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=% of Crit, StringFormat=\{0:P2\}}" Header="% of Crit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=C Hit}" Header="C Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=C Low}" Header="C Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=C High}" Header="C High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=C Avg, StringFormat=\{0:F2\}}" Header="C Avg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Crit %, StringFormat=\{0:P2\}}" Header="Crit %" />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Healing Stats"
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_HealingStatsVisibility, Mode=TwoWay}">
                <ScrollViewer>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Expander Margin="10,0,0,0" Header="Click a character and expand/view this for a breakdown of friendly actions." DataContext="{Binding SelectedItem, ElementName=HealingList, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{DynamicResource ExpanderStyle1}">
                                <DockPanel LastChildFill="True">
                                    <DockPanel DockPanel.Dock="Top">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="gui_CHealingName" Text="{Binding Path=Name}" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold" Margin="2"/>
                                            <Button Width="100" Name="gui_ToggleHealingList" Margin="2" Content="Increase Size"
                                                DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}"
                                                Command="{Binding Path=ToggleHealingExpandedCommand}" />
                                        </StackPanel>
                                    </DockPanel>
                                    <DockPanel>
                                        <ListView Name="gui_DetailHealing" Grid.Row="1" ItemsSource="{Binding Healing}" MinHeight="150" Height="150"  GridViewColumnHeader.Click="SortHandler">
                                            <ListView.View>
                                                <GridView AllowsColumnReorder="False">
                                                    <GridView.ColumnHeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                                        </DataTemplate>
                                                    </GridView.ColumnHeaderTemplate>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding % of Heal, StringFormat=\{0:P2\}}" Header="% of Heal"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Low}" Header="Low"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding High}" Header="High"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </DockPanel>
                                </DockPanel>
                            </Expander>
                        </DockPanel>

                        <Grid>
                            <ListView ItemsSource="{Binding}" DataContext="{Binding NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource ParseMod}, Path=Timeline.PartyStats}" x:Name="HealingList" ScrollViewer.CanContentScroll="False" GridViewColumnHeader.Click="SortHandler">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                            </DataTemplate>
                                        </GridView.ColumnHeaderTemplate>
                                        <!--<GridViewColumn Header="Avatar" CellTemplate="{StaticResource avatarTemplate}" />-->
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Name}" Header="Name" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=H Total}" Header="H Total" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=HPS, StringFormat=\{0:F2\}}" Header="HPS"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=% of Heal, StringFormat=\{0:P2\}}" Header="% of Heal"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Heal Low}" Header="Heal Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Heal High}" Header="Heal High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Heal Avg, StringFormat=\{0:F2\}}" Header="Heal Avg"  />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Damage Stats" 
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_DamageStatsVisibility, Mode=TwoWay}">
                <ScrollViewer>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <Expander Margin="10,0,0,0" Header="Click a character and expand/view this for a breakdown of hostile actions on them." DataContext="{Binding SelectedItem, ElementName=DamageList, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{DynamicResource ExpanderStyle1}">
                                <DockPanel LastChildFill="True">
                                    <DockPanel DockPanel.Dock="Top">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="gui_CDamageName" Text="{Binding Path=Name}" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold" Margin="2"/>
                                            <Button Width="100" Name="gui_ToggleDamageList" Margin="2" Content="Increase Size"
                                                DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}"
                                                Command="{Binding Path=ToggleDamageExpandedCommand}" />
                                        </StackPanel>
                                    </DockPanel>
                                    <DockPanel>
                                        <ListView Name="gui_DetailDamage" Grid.Row="1" ItemsSource="{Binding Damage}" MinHeight="150" Height="150"  GridViewColumnHeader.Click="SortHandler">
                                            <ListView.View>
                                                <GridView AllowsColumnReorder="False">
                                                    <GridView.ColumnHeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                                        </DataTemplate>
                                                    </GridView.ColumnHeaderTemplate>
                                                    <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Reg}" Header="Reg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding % of Reg, StringFormat=\{0:P2\}}" Header="% of Reg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Hit}" Header="Hit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Low}" Header="Low"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding High}" Header="High"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Block}" Header="Block"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Path=Block %, StringFormat=\{0:P2\}}" Header="Block %"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding Crit}" Header="C Total"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding % of Crit, StringFormat=\{0:P2\}}" Header="% of Crit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Hit}" Header="C Hit"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Low}" Header="C Low"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C High}" Header="C High"  />
                                                    <GridViewColumn DisplayMemberBinding="{Binding C Avg, StringFormat=\{0:F2\}}" Header="C Avg"  />
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </DockPanel>
                                </DockPanel>
                            </Expander>
                        </DockPanel>

                        <Grid>
                            <ListView ItemsSource="{Binding}" DataContext="{Binding NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Source={StaticResource ParseMod}, Path=Timeline.PartyStats}" x:Name="DamageList" ScrollViewer.CanContentScroll="False" GridViewColumnHeader.Click="SortHandler">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                            </DataTemplate>
                                        </GridView.ColumnHeaderTemplate>
                                        <!--<GridViewColumn Header="Avatar" CellTemplate="{StaticResource avatarTemplate}" />-->
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Name}" Header="Name" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT Total}" Header="DT Total" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DTPS, StringFormat=\{0:F2\}}" Header="DTPS"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding DT Reg}" Header="DT Reg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=% of DT Dmg, StringFormat=\{0:P2\}}" Header="% of DT Dmg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT Low}" Header="DT Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT High}" Header="DT High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT Hit}" Header="DT Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT Avg, StringFormat=\{0:F2\}}" Header="DT Avg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT Crit}" Header="DT Crit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=% of DT C Dmg, StringFormat=\{0:P2\}}" Header="% of DT C Dmg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT C Hit}" Header="DT C Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT C Low}" Header="DT C Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT C High}" Header="DT C High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Path=DT C Avg, StringFormat=\{0:F2\}}" Header="DT C Avg"  />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                </ScrollViewer>
            </TabItem>
            <!--<TabItem Header="Monster Stats 1">
                <ScrollViewer>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource ParseMod}, Path=Timeline.MobStats, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <UserControls:MobInfoBox DataContext="{Binding}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>-->
            <TabItem Header="Monster Stats" 
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_MonsterStatsVisibility, Mode=TwoWay}">
                <ScrollViewer>
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top">
                            <StackPanel>
                                <Expander Margin="10,0,0,0" Header="Click a mob and expand/view this for a breakdown of hostile actions on them." DataContext="{Binding SelectedItem, ElementName=MobList, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{DynamicResource ExpanderStyle1}">
                                    <DockPanel LastChildFill="True">
                                        <DockPanel DockPanel.Dock="Top">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=Name}" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold" Margin="2"/>
                                                <Button Width="100" Name="gui_ToggleMobList" Margin="2" Content="Increase Size"
                                                DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}"
                                                Command="{Binding Path=ToggleMobExpandedCommand}" />
                                            </StackPanel>
                                        </DockPanel>
                                        <DockPanel>
                                            <ListView Name="gui_DetailMob" Grid.Row="1" ItemsSource="{Binding M Abilities}" MinHeight="150" Height="150"  GridViewColumnHeader.Click="SortHandler">
                                                <ListView.View>
                                                    <GridView AllowsColumnReorder="False">
                                                        <GridView.ColumnHeaderTemplate>
                                                            <DataTemplate>
                                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                                            </DataTemplate>
                                                        </GridView.ColumnHeaderTemplate>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Used}" Header="Used"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Reg}" Header="Reg"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Hit}" Header="Hit"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Low}" Header="Low"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding High}" Header="High"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Crit}" Header="Crit"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding C Hit}" Header="C Hit"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding C Low}" Header="C Low"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding C High}" Header="C High"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding C Avg, StringFormat=\{0:F2\}}" Header="C Avg"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Resist}" Header="Resist"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Resist %, StringFormat=\{0:P2\}}" Header="Resist %"  />
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </DockPanel>
                                    </DockPanel>
                                </Expander>
                                <Expander Margin="10,0,0,0" Header="Click a mob and expand/view this for a breakdown of drops." DataContext="{Binding SelectedItem, ElementName=MobList, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{DynamicResource ExpanderStyle1}">
                                    <DockPanel LastChildFill="True">
                                        <DockPanel DockPanel.Dock="Top">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=Name}" HorizontalAlignment="Center" FontSize="14" FontWeight="Bold" Margin="2"/>
                                                <Button Width="100" Name="gui_ToggleDropList" Margin="2" Content="Increase Size"
                                                DataContext="{Binding Source={StaticResource MainTabControlViewModelModelDataSource}}"
                                                Command="{Binding Path=ToggleDropsExpandedCommand}" />
                                            </StackPanel>
                                        </DockPanel>
                                        <DockPanel>
                                            <ListView Name="gui_DetailDrops" Grid.Row="1" ItemsSource="{Binding Drops}" MinHeight="150" Height="150"  GridViewColumnHeader.Click="SortHandler">
                                                <ListView.View>
                                                    <GridView AllowsColumnReorder="False">
                                                        <GridView.ColumnHeaderTemplate>
                                                            <DataTemplate>
                                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                                            </DataTemplate>
                                                        </GridView.ColumnHeaderTemplate>
                                                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                                        <GridViewColumn DisplayMemberBinding="{Binding Path=Drop %, StringFormat=\{0:P2\}}" Header="Drop %"  />
                                                    </GridView>
                                                </ListView.View>
                                            </ListView>
                                        </DockPanel>
                                    </DockPanel>
                                </Expander>
                            </StackPanel>
                        </DockPanel>

                        <Grid>
                            <ListView ItemsSource="{Binding}" DataContext="{Binding Source={StaticResource ParseMod}, Path=Timeline.MobStats, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" x:Name="MobList" ScrollViewer.CanContentScroll="False" GridViewColumnHeader.Click="SortHandler">
                                <ListView.View>
                                    <GridView AllowsColumnReorder="False">
                                        <GridView.ColumnHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock FontSize="10" FontWeight="Bold" Margin="2,0,2,0" Text="{Binding}" Width="Auto" MinWidth="50"/>
                                            </DataTemplate>
                                        </GridView.ColumnHeaderTemplate>
                                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name"  Width="150" />
                                        <GridViewColumn DisplayMemberBinding="{Binding Killed}" Header="Killed"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Avg HP, StringFormat=\{0:F0\}}" Header="Avg HP"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Total}" Header="Total"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Reg}" Header="Reg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Hit}" Header="Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Low}" Header="Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding High}" Header="High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Avg, StringFormat=\{0:F2\}}" Header="Avg"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding Crit}" Header="C Total"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding C Hit}" Header="C Hit"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding C Low}" Header="C Low"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding C High}" Header="C High"  />
                                        <GridViewColumn DisplayMemberBinding="{Binding C Avg, StringFormat=\{0:F2\}}" Header="C Avg"  />
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                    </DockPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Debug" IsEnabled="True" Name="debugTab" 
                     Visibility="{Binding Source={x:Static me:Settings.Default}, Path=Gui_DebugVisibility, Mode=TwoWay}">
                <UserControls:DebugWindow DataContext="{StaticResource ParseMod}" />
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
